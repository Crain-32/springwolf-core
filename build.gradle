plugins {
    id 'java'
    id 'maven'
    id 'signing'
    id 'maven-publish'

    id 'org.springframework.boot' version '2.1.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
}

group = 'io.github.springwolf'
version = '0.2.0' + (Boolean.valueOf(System.getProperty('snapshot')) ? '-SNAPSHOT' : '')
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.swagger:swagger-inflector:2.0.5'

    implementation 'org.springframework:spring-web'
    implementation 'org.springframework:spring-context'

    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'

    compileOnly 'org.projectlombok:lombok:1.18.4'
    annotationProcessor 'org.projectlombok:lombok:1.18.4'

    testImplementation('org.springframework.boot:spring-boot-starter-test')

    testCompile 'org.projectlombok:lombok:1.18.4'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'

    testCompile('org.assertj:assertj-core:3.11.1')
}

jar.enabled = true
bootJar.enabled = false

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

def pomConfig = {
    licenses {
        license {
            name 'The Apache License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }

    developers {
        developer {
            id 'stavshamir'
            name 'Stav Shamir'
            email 'shamir.stav@gmail.com'
        }
    }

    scm {
        url 'https://github.com/stavshamir/springwolf'
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }

            groupId project.group
            artifactId 'springwolf-core'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Automated JSON API documentation for async APIs (Kafka etc.) interfaces built with Spring')
                root.appendNode('name', 'springwolf-core')
                root.appendNode('url', 'https://github.com/stavshamir/springwolf')
                root.children().last() + pomConfig

                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
            }

            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }

    repositories {
        maven {
            url 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }

    model {
        tasks.publishMavenJavaPublicationToMavenLocal {
            dependsOn project.tasks.signArchives
        }
        tasks.publishMavenJavaPublicationToMavenRepository {
            dependsOn project.tasks.signArchives
        }
    }
}
